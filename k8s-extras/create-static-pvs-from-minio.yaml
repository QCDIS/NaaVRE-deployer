- hosts: masters[0]
  gather_facts: false
  tasks:

    - name: Create static PersistentVolume for MinIO for public-bucket
      kubernetes.core.k8s:
        resource_definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: "naa-vre-public-{{ pvc_namespace }}"
          spec:
            storageClassName: "{{ minio_storage_class }}"
            capacity:
              storage: 10Gi
            accessModes:
              - ReadOnlyMany
            claimRef:
              namespace: "{{ pvc_namespace }}"
              name: "csi-s3-naa-vre-public-bucket-{{ pvc_namespace }}"
            csi:
              driver: ru.yandex.s3.csi
              controllerPublishSecretRef:
                name: csi-s3-secret
                namespace: csi-s3
              nodePublishSecretRef:
                name: csi-s3-secret
                namespace: csi-s3
              nodeStageSecretRef:
                name: csi-s3-secret
                namespace: csi-s3
              volumeAttributes:
                capacity: 10Gi
                mounter: geesefs
                options: --memory-limit 1000 --dir-mode 0777 --file-mode 0666
              volumeHandle: naa-vre-public

    - name: Create static PersistentVolumeClaim for MinIO public-bucket
      kubernetes.core.k8s:
        resource_definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: "csi-s3-naa-vre-public-bucket-{{ pvc_namespace }}"
            namespace: "{{ pvc_namespace }}"
          spec:
            # Empty storage class disables dynamic provisioning
            storageClassName: ""
            accessModes:
              - ReadOnlyMany
            resources:
              requests:
                storage: 10Gi


    - name: Create static PersistentVolume for MinIO for user-bucket
      kubernetes.core.k8s:
        resource_definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: "naa-vre-user-data-{{ pvc_namespace }}"
          spec:
            storageClassName: "{{ minio_storage_class }}"
            capacity:
              storage: 10Gi
            accessModes:
              - ReadWriteMany
            claimRef:
              namespace: "{{ pvc_namespace }}"
              name: "csi-s3-naa-vre-user-data-bucket-{{ pvc_namespace }}"
            csi:
              driver: ru.yandex.s3.csi
              controllerPublishSecretRef:
                name: csi-s3-secret
                namespace: csi-s3
              nodePublishSecretRef:
                name: csi-s3-secret
                namespace: csi-s3
              nodeStageSecretRef:
                name: csi-s3-secret
                namespace: csi-s3
              volumeAttributes:
                capacity: 10Gi
                mounter: geesefs
                options: --memory-limit 1000 --dir-mode 0777 --file-mode 0666
              volumeHandle: naa-vre-user-data

    - name: Create static PersistentVolumeClaim for MinIO user-bucket
      kubernetes.core.k8s:
        resource_definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            namespace: "{{ pvc_namespace }}"
            name: "csi-s3-naa-vre-user-data-bucket-{{ pvc_namespace }}"
          spec:
            # Empty storage class disables dynamic provisioning
            storageClassName: ""
            accessModes:
              - ReadWriteMany
            resources:
              requests:
                storage: 10Gi